#include <iostream>
#include <chrono>
using namespace std;
using namespace chrono;

class Stack{
public:
    int* arr;
    int top;
    int size;

    Stack(int n){
        top = -1;
        size = n;
        arr = new int[n];
    }
};

bool Is_empty(Stack &s){
    return (s.top == -1);
}

void display(Stack &s){
    for(int i=0; i<=s.top; i++){
        cout << s.arr[i] << " ";
    }cout << endl;
}

void push(Stack &s, int x){
    s.top = s.top + 1;
    if (s.top > s.size-1){
        cout << "Stack Overflow" << endl;
        s.top--;
    }
    else{
        s.arr[s.top] = x;
    }
}

int pop(Stack &s){
    if (Is_empty(s)){
        cout << "Stack Underflow" << endl;
        return 0;
    }
    else{
        cout << s.arr[s.top] << endl;
        s.top = s.top - 1;
        return s.arr[s.top + 1];
    }
}

int main(){

    auto start = high_resolution_clock::now();

    Stack s(10);

    push(s,8);
    push(s,10);
    push(s,5);
    push(s,11); 
    push(s,15); 
    push(s,23); 
    push(s,6); 
    push(s,18); 
    push(s,20); 
    push(s,17); 

    display(s);

    pop(s);
    pop(s);
    pop(s);
    pop(s);
    pop(s);

    display(s);

    push(s,4); 
    push(s,30); 
    push(s,3); 
    push(s,1);

    display(s);
        
    auto end = high_resolution_clock::now();

    auto duration = duration_cast<microseconds>(end - start);
    cout << "Time taken: " << duration.count() << " microseconds" << endl;
    return 0;


    return 0;
}
